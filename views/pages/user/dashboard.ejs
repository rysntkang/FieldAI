<!DOCTYPE html>
<html lang="en">
<head>

  <title>FieldAi Dashboard</title>
  <%- include('../../partials/user/head') %>
  <style>
    .sidebar {
      height: 100vh;
      width: 250px;
      position: fixed;
      top: 0;
      left: 0;
      background-color: #343a40;
      padding-top: 20px;
    }
    .sidebar a {
      color: #fff;
      text-decoration: none;
      padding: 15px 20px;
      display: block;
    }
    .sidebar a:hover {
      background-color: #495057;
    }
    .sidebar a.active {
      background-color: #007bff;
      color: #fff;
    }
    .content {
      margin-left: 250px;
      padding: 20px;
    }
    .sector-card {
      margin-bottom: 20px;
    }
    .modal-backdrop {
      background-color: rgba(0, 0, 0, 0.8);
    }
    #map {
      height: 300px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <%- include('../../partials/user/sidebar') %>

  <div class="content">
    <h3>Your Sectors</h3>
    <div class="row" id="sectors-container">
      <% if (sectors.length > 0) { %>
        <% sectors.forEach(sector => { %>
          <div class="col-md-3 sector-card">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title"><%= sector.name %></h5>
                <p class="card-text">Lat: <%= sector.latitude %>, Lng: <%= sector.longitude %></p>
                <a href="/upload?sectorId=<%= sector.sector_id %>" class="btn btn-primary btn-sm">Upload Images</a>
                <a href="/results/<%= sector.sector_id %>" class="btn btn-secondary btn-sm">View Results</a>
              </div>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <p>No sectors available. Please add a new sector to get started.</p>
      <% } %>
    </div>
    <button class="btn btn-success mt-3" data-toggle="modal" data-target="#addSectorModal">Add New Sector</button>
    <hr>

    <h3>Weather Data</h3>
    <div id="temperature-section" class="content-section">
      <h4>Temperature Forecast Trends</h4>
      <canvas id="temperatureChart"></canvas>
    </div>
    <hr>

    <div class="modal fade" id="addSectorModal" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Add New Sector</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <form id="addSectorForm" action="/user/addSector" method="POST">
            <div class="modal-body">
                <div class="form-group">
                    <label for="sectorName">Sector Name</label>
                    <input type="text" id="sectorName" name="sectorName" class="form-control" required>
                </div>
                <label for="map">Select Sector Location</label>
                <div id="map"></div>
                <input type="hidden" id="latitude" name="latitude">
                <input type="hidden" id="longitude" name="longitude">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save Sector</button>
            </div>
          </form>        
        </div>
      </div>
    </div>
  </div>

  <footer class="bg-dark text-center text-white py-3 static-bottom">
    <%- include('../../partials/user/footer') %>
  </footer>

  <%- include('../../partials/user/scripts') %>
  <script>
    let map, marker;

    function initMap() {
      navigator.geolocation.getCurrentPosition(position => {
        const { latitude, longitude } = position.coords;

        map = L.map('map').setView([latitude, longitude], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '© OpenStreetMap contributors',
        }).addTo(map);

        marker = L.marker([latitude, longitude], { draggable: true }).addTo(map);

        document.getElementById('latitude').value = latitude;
        document.getElementById('longitude').value = longitude;

        marker.on('dragend', () => {
          const { lat, lng } = marker.getLatLng();
          document.getElementById('latitude').value = lat;
          document.getElementById('longitude').value = lng;
        });
      });
    }

    async function fetchSectors() {
    try {
        const response = await fetch('/sectors');
        const sectors = await response.json();

        const container = document.getElementById('sectors-container');
        container.innerHTML = '';

        sectors.forEach(sector => {
          const card = document.createElement('div');
          card.className = 'col-md-3 sector-card';
          card.innerHTML = `
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">${sector.name}</h5>
                <p class="card-text">Latitutde: ${sector.latitude}, Longitude: ${sector.longitude}</p>
                <a href="/upload?sectorId=${sector.sector_id}" class="btn btn-primary btn-sm">Upload Images</a>
                <a href="/results/${sector.sector_id}" class="btn btn-secondary btn-sm">View Results</a>
              </div>
            </div>
            `;
            container.appendChild(card);
        });
    } catch (error) {
      console.error('Failed to fetch sectors:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', async () => {
    initMap();
    fetchSectors();

    try {
      const temperatureData = <%- JSON.stringify(temperatureData) %>;

      const labels = temperatureData.map(data => data.date);
      const tempMax = temperatureData.map(data => data.temp_max);
      const tempMin = temperatureData.map(data => data.temp_min);

      const ctx = document.getElementById('temperatureChart').getContext('2d');
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [
            {
              label: 'Max Temperature (°C)',
              data: tempMax,
              borderColor: 'rgba(255, 99, 132, 1)',
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              fill: true,
            },
            {
              label: 'Min Temperature (°C)',
              data: tempMin,
              borderColor: 'rgba(54, 162, 235, 1)',
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              fill: true,
            },
          ],
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top',
            },
            title: {
              display: true,
              text: 'Daily Temperature Trends',
            },
          },
        },
      });
    } catch (error) {
      console.error('Error rendering temperature chart:', error);
    }
  });
  </script>
</body>
</html>
